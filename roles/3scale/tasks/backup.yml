---
# MySQL backup
- name: Get MySQL password
  shell: oc get dc system-mysql -n {{ threescale_namespace }} -o jsonpath='{ .spec.template.spec.containers[?(@.name=="system-mysql")].env[?(@.name=="MYSQL_ROOT_PASSWORD")].value }'
  register: threescale_mysql_password

- name: Create the MySQL credentials secret for backup
  include_role:
    name: backup
    tasks_from: _create_mysql_secret.yml
  vars:
    secret_name: '{{ threescale_backup_mysql_secret }}'
    secret_mysql_user: root
    secret_mysql_host: 'system-mysql.{{ threescale_namespace }}.svc'
    secret_mysql_password: '{{ threescale_mysql_password.stdout }}'

- name: Create the 3scale MySQL CronJob
  include_role:
    name: backup
    tasks_from: _create_backup_cron_job.yml
  vars:
    cronjob_name: 3scale-mysql-backup
    component: mysql
    component_secret_name: "{{ threescale_backup_mysql_secret }}"
    product_name: 3scale

# Postgres backup
- name: Get Postgres password
  shell: oc get secret zync -n {{ threescale_namespace }} -o jsonpath='{ .data.ZYNC_DATABASE_PASSWORD }' | base64 --decode
  register: threescale_postgres_password

- name: Get Postgres username
  shell: oc get dc zync-database -n {{ threescale_namespace }} -o jsonpath='{ .spec.template.spec.containers[?(@.name=="postgresql")].env[?(@.name=="POSTGRESQL_USER")].value }'
  register: threescale_postgres_username

- name: Get Postgres database
  shell: oc get dc zync-database -n {{ threescale_namespace }} -o jsonpath='{ .spec.template.spec.containers[?(@.name=="postgresql")].env[?(@.name=="POSTGRESQL_DATABASE")].value }'
  register: threescale_postgres_database

- name: Create the Postgres credentials secret for backup
  include_role:
    name: backup
    tasks_from: _create_postgres_secret.yml
  vars:
    secret_name: '{{ threescale_backup_postgres_secret }}'
    secret_postgres_user: '{{ threescale_postgres_username.stdout }}'
    secret_postgres_host: 'zync-database.{{ threescale_namespace }}.svc'
    secret_postgres_database: '{{ threescale_postgres_database.stdout }}'
    secret_postgres_password: '{{ threescale_postgres_password.stdout }}'
    secret_postgres_version: 10

- name: Create the 3scale Postgres CronJob
  include_role:
    name: backup
    tasks_from: _create_backup_cron_job.yml
  vars:
    cronjob_name: 3scale-postgres-backup
    component: postgres
    component_secret_name: "{{ threescale_backup_postgres_secret }}"
    product_name: 3scale

# Redis backup
- name: Create the 3scale Redis CronJob
  include_role:
    name: backup
    tasks_from: _create_backup_cron_job.yml
  vars:
    cronjob_name: 3scale-redis-backup
    component: 3scale-redis
    product_name: 3scale
