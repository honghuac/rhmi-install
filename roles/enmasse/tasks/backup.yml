---
# Postgres backup
- name: Get Postgres password
  shell: oc get secret postgresql -n {{ enmasse_namespace }} -o jsonpath='{ .data.database-password }' | base64 --decode
  register: enmasse_postgres_password

- name: Get Postgres username
  shell: oc get secret postgresql -n {{ enmasse_namespace }} -o jsonpath='{ .data.database-user }' | base64 --decode
  register: enmasse_postgres_username

- name: Get Postgres database
  shell: oc get secret postgresql -n {{ enmasse_namespace }} -o jsonpath='{ .data.database-name }' | base64 --decode
  register: enmasse_postgres_database

- name: Create the Postgres credentials secret for backup
  include_role:
    name: backup
    tasks_from: _create_postgres_secret.yml
  vars:
    secret_name: '{{ enmasse_backup_postgres_secret }}'
    secret_postgres_user: '{{ enmasse_postgres_username.stdout }}'
    secret_postgres_host: postgresql.{{ eval_enmasse_namespace }}.svc
    secret_postgres_database: '{{ enmasse_postgres_database.stdout }}'
    secret_postgres_password: '{{ enmasse_postgres_password.stdout }}'

- name: Create the enmasse Postgres CronJob
  include_role:
    name: backup
    tasks_from: _create_backup_cron_job.yml
  vars:
    cronjob_name: "{{ enmasse_postgres_cronjob_name }}"
    component: postgres
    component_secret_name: "{{ enmasse_backup_postgres_secret }}"
    product_name: amqonline

# PV backup
- name: Create the enmasse PV CronJob
  include_role:
    name: backup
    tasks_from: _create_backup_cron_job.yml
  vars:
    cronjob_name: "{{ enmasse_pv_cronjob_name }}"
    component: enmasse_pv
    product_name: amqonline

